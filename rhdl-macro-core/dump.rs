fn do_stuff < T : Digital , S : Digital > (x : Foo < T > , y : Foo < S >) -> bool { let c = x . a ; let d = (x . a , y . b) ; let e = Foo :: < T > { a : c , b : c } ; e == x } struct do_stuff < T , S > { __phantom_0 : std :: marker :: PhantomData < T > , __phantom_1 : std :: marker :: PhantomData < S > , } impl < T : Digital , S : Digital > rhdl_core :: digital_fn :: DigitalFn for do_stuff < T , S > { fn kernel_fn () -> Box < rhdl_core :: ast :: KernelFn > { rhdl_core :: ast_builder :: kernel_fn (stringify ! (do_stuff) , vec ! { rhdl_core :: ast_builder :: type_pat (rhdl_core :: ast_builder :: ident_pat (stringify ! (x) . to_string () , false) , < Foo < T > as rhdl_core :: Digital > :: static_kind ()) , rhdl_core :: ast_builder :: type_pat (rhdl_core :: ast_builder :: ident_pat (stringify ! (y) . to_string () , false) , < Foo < S > as rhdl_core :: Digital > :: static_kind ()) } , < bool as rhdl_core :: Digital > :: static_kind () , rhdl_core :: ast_builder :: block (vec ! [rhdl_core :: ast_builder :: local_stmt (rhdl_core :: ast_builder :: ident_pat (stringify ! (c) . to_string () , false) , Some (rhdl_core :: ast_builder :: field_expr (rhdl_core :: ast_builder :: path_expr (rhdl_core :: ast_builder :: path (vec ! [rhdl_core :: ast_builder :: path_segment (stringify ! (x) . to_string () , rhdl_core :: ast_builder :: path_arguments_none ())] ,)) , rhdl_core :: ast_builder :: member_named (stringify ! (a) . to_string ())))) , rhdl_core :: ast_builder :: local_stmt (rhdl_core :: ast_builder :: ident_pat (stringify ! (d) . to_string () , false) , Some (rhdl_core :: ast_builder :: tuple_expr (vec ! [rhdl_core :: ast_builder :: field_expr (rhdl_core :: ast_builder :: path_expr (rhdl_core :: ast_builder :: path (vec ! [rhdl_core :: ast_builder :: path_segment (stringify ! (x) . to_string () , rhdl_core :: ast_builder :: path_arguments_none ())] ,)) , rhdl_core :: ast_builder :: member_named (stringify ! (a) . to_string ())) , rhdl_core :: ast_builder :: field_expr (rhdl_core :: ast_builder :: path_expr (rhdl_core :: ast_builder :: path (vec ! [rhdl_core :: ast_builder :: path_segment (stringify ! (y) . to_string () , rhdl_core :: ast_builder :: path_arguments_none ())] ,)) , rhdl_core :: ast_builder :: member_named (stringify ! (b) . to_string ()))]))) , rhdl_core :: ast_builder :: local_stmt (rhdl_core :: ast_builder :: ident_pat (stringify ! (e) . to_string () , false) , Some (rhdl_core :: ast_builder :: struct_expr (rhdl_core :: ast_builder :: path (vec ! [rhdl_core :: ast_builder :: path_segment (stringify ! (Foo) . to_string () , rhdl_core :: ast_builder :: path_arguments_angle_bracketed (vec ! [rhdl_core :: ast_builder :: generic_argument_type (< T as Digital > :: static_kind ())]))] ,) , vec ! [rhdl_core :: ast_builder :: field_value (rhdl_core :: ast_builder :: member_named (stringify ! (a) . to_string ()) , rhdl_core :: ast_builder :: path_expr (rhdl_core :: ast_builder :: path (vec ! [rhdl_core :: ast_builder :: path_segment (stringify ! (c) . to_string () , rhdl_core :: ast_builder :: path_arguments_none ())] ,))) , rhdl_core :: ast_builder :: field_value (rhdl_core :: ast_builder :: member_named (stringify ! (b) . to_string ()) , rhdl_core :: ast_builder :: path_expr (rhdl_core :: ast_builder :: path (vec ! [rhdl_core :: ast_builder :: path_segment (stringify ! (c) . to_string () , rhdl_core :: ast_builder :: path_arguments_none ())] ,)))] , None , Digital :: kind (& Foo :: < T > { a : Default :: default () , b : Default :: default () })) ,)) , rhdl_core :: ast_builder :: expr_stmt (rhdl_core :: ast_builder :: binary_expr (rhdl_core :: ast_builder :: BinOp :: Eq , rhdl_core :: ast_builder :: path_expr (rhdl_core :: ast_builder :: path (vec ! [rhdl_core :: ast_builder :: path_segment (stringify ! (e) . to_string () , rhdl_core :: ast_builder :: path_arguments_none ())] ,)) , rhdl_core :: ast_builder :: path_expr (rhdl_core :: ast_builder :: path (vec ! [rhdl_core :: ast_builder :: path_segment (stringify ! (x) . to_string () , rhdl_core :: ast_builder :: path_arguments_none ())] ,))))] ,) ,) } }